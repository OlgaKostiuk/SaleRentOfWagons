объект "Вагон"
- один реквизит "Номер вагона". Число (
объект "Контрагент" (разные предприятия, в том числе наши подразделения)
- наименование
объект "Департамент" (наш департамен)
- наименование
- ссылка на "контрагент" (для удобства учета, каждый департамент имеет ссылку на контрагента)
объект "Вид операции"
- наименование вида операции
- признак "купля/аренда"

Операции с вагонами:
- дата "С"
- дата "По"
- департамент по которому проходит операция
- контрагент "продавший" или "сдавший в аренду" (это может быть и чужое предприятие и наш департамент, который передал в "аренду" вагон другому департаменту)
- номер договора
- дата договора
- "уровень" (для ускорения обработки, этот реквизит формирует последовательность событий от одной даты - вагон может быть передан в субаренду 2 раза в один день. 0 - начальная операция и дальше при передаче в "аренду" уровень увеличивается на 1. в один момент времени по одному вагону может быть только одна запись с одним уровнем)

Задача:
Сделать интерфейс по работе с операциями (вагоны, контрагенты и департаменты забить липовыми данными - для них интерфейс не нужен)
- добавление операции по вагону
- удаление операции по вагону
- изменение операции по вагону

Язык: C# (WinForms)
Платформа: MS Visual Studio 2010-2013
СУБД: MS SQL

Учитывать ситуации:
- в один момент времени вагон не может быть на одном "уровне" в разных департаментах.
	например, вагон принадлежит департаменту 1 по договору с 01.01.2015. 
	департамент 1 передает вагон в субаренду департаменту 2 с 01.03.2015 по 31.03.2015
	затем департамент 1 передает вагон в субаренду департаменту 3 с 01.04.2015 по 31.03.2015
	если пользователь будет менять даты субаренды департаментов 2 или 3, то их периоды не должны пересекаться
	
- вагон не может находиться в субаренде дольше, чем есть договор аренды или раньше предыдущего договора аренды/покупки
	например, (по примеру из верхнего случая) департамент 2 не может взять в субаренду вагон до 01.01.2015 или департамент 2 не может сам передавать вагон в следующую субаренду на период, который выходит за рамки его договора субаренды

- нельзя купить вагон, который находится в аренде	
- следующая покупка не может быть второго уровня. т.е. если департамент 1 купил вагон и продает его департаменту 2, то ее период "владения" должен закончитьчя на день ранее, чем вагон будет передан во владение следующему департаменту

Бонусная задача
Реализовать хранимые функции, которые возвращают:
- департамент, имеющий на данный момент времени вагон в управлении (куплен или арендован)
- контрагент (в том числе это может быть и наш департамент), который "владеет"" вагоном (если вагон арендован, то таким контрагентом для нас будет тот, кто нам передал в аренду)

В качестве решение передаются:
1. Скрипты по созданию всех необходимых объектов БД (таблицы, хранимые процедуры, функции)
2. Скрипты по формирование "липовых" данных в БД
3. Проект VS

Код (включая скрипты БД) должен содержать комментарии, достаточные для понимания принципов работы